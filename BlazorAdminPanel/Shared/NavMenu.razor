@using Microsoft.Extensions.Logging;

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">BlazorAdminPanel</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li>
        @if (AuState.User.IsInRole("Admin"))
        {
            <li class="nav-item px-3" style="cursor:pointer">
                <NavLink class="nav-link" @onclick="@AdminRedirect">
                    <img src="Images/keys.png" style="width:20px;height:20px;margin:3px;">
                    Admin panel
                </NavLink>
            </li>
        }

    </ul>
</div>

@code {


    [Inject] AuthenticationStateProvider authenticationStateProvider { get; set; }
    [Inject] ILogger<NavMenu> Log { get; set; }
    [Inject] NavigationManager navigationManager { get; set; }

    public static AuthenticationState AuState = null;

    protected override async Task OnInitializedAsync()
    {
        AuState = await authenticationStateProvider.GetAuthenticationStateAsync();
        Log.LogInformation($"MainNav.AuthenticationStateProvider.User (OnInitializedAsync) ={AuState.User.Identity.Name}");
    }

    protected void AdminRedirect()
    {
        navigationManager.NavigateTo("/Admin/", forceLoad: true);
    }

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}
